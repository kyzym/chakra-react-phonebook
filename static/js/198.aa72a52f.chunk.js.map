{"version":3,"file":"static/js/198.aa72a52f.chunk.js","mappings":"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","sources":["components/RegisterForm.jsx","redux/filter/selectors.js","components/ContactsListItem.jsx","components/ContactsList.jsx","components/Filter.jsx","components/ContactsForm.jsx","components/Notification.jsx","components/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/layout';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterForm = ({ handleSignUp }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const bgColor = useColorModeValue('gray.200', 'gray.700');\n\n  return (\n    <Flex align={'center'} justify={'center'} bg={bgColor}>\n      <Stack spacing={1} mx={'auto'} maxW={'lg'} py={3} px={3}>\n        <Stack align={'center'}>\n          <Heading fontSize={'2xl'} textAlign={'center'}>\n            Sign up to your account\n          </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy our cool APP ✌️\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={1} as=\"form\" onSubmit={handleSignUp}>\n            <FormControl id=\"firstName\" isRequired>\n              <FormLabel>Nickname</FormLabel>\n              <Input\n                size=\"md\"\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Sara Repetovna\"\n              />\n            </FormControl>\n\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                size=\"md\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email@mail.com\"\n              />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  size=\"md\"\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"md\"\n                fontSize={'md'}\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            <Stack pt={1}>\n              <Text align={'center'} fontSize={'md'}>\n                Already a user?\n                <Link\n                  as={NavLink}\n                  to=\"/login\"\n                  color={'blue.400'}\n                  fontSize={'lg'}\n                  ml=\"1\"\n                >\n                  Login\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n","export const selectFilter = state => state.filter.filterValue;\n","import { BsTrash } from 'react-icons/bs';\nimport { Text } from '@chakra-ui/layout';\nimport { Button, useToast } from '@chakra-ui/react';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\n\nexport const ContactsListItem = ({ contact: { name, number, id } }) => {\n  const [deleteContact, { isLoading, isSuccess }] = useDeleteContactMutation();\n  const toast = useToast();\n\n  const handleDelete = () => {\n    deleteContact(id).unwrap();\n    toast({\n      position: 'top',\n      title: `OK, we've removed -  ${name} `,\n      status: 'success',\n      isClosable: true,\n    });\n  };\n\n  const checkIsDeleted = isLoading || isSuccess;\n\n  return (\n    <>\n      <Text\n        ml={'5%'}\n        mr={'auto'}\n        fontSize={{ md: 'lg', lg: 'lg' }}\n        fontWeight={'500'}\n      >\n        {name}\n      </Text>\n      <Text\n        ml={'auto'}\n        mr={'5%'}\n        fontWeight={'500'}\n        fontSize={{ md: 'lg', lg: 'lg' }}\n      >\n        {number}\n      </Text>\n      <Button onClick={handleDelete} disabled={checkIsDeleted} color=\"#f44336\">\n        <BsTrash size={20} />\n      </Button>\n    </>\n  );\n};\n","import { ContactsNotification } from 'components';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { ContactsListItem } from './ContactsListItem';\n\nimport { List, ListIcon, ListItem } from '@chakra-ui/layout';\nimport { BsPhone } from 'react-icons/bs';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n\n  const { data: contacts = [], isLoading } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase().trim();\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <List spacing={2} w={{ base: '384px', lg: '450px' }}>\n        {visibleContacts.map(contact => (\n          <ListItem\n            key={contact.id}\n            w=\"100%\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <ListIcon\n              as={BsPhone}\n              boxSize={{ base: 5, md: 6, lg: 7 }}\n              color=\"blue.500\"\n            />\n            <ContactsListItem contact={contact} />\n          </ListItem>\n        ))}\n      </List>\n\n      {!isLoading && (\n        <ContactsNotification\n          visibleContacts={visibleContacts.length}\n          savedContactsNumber={contacts.length}\n        />\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterList } from 'redux/filter/filtersSlice';\nimport { Flex, Input, InputGroup, InputLeftAddon } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const inputValue = e.target.value;\n\n    dispatch(filterList(inputValue));\n  };\n\n  return (\n    <Flex>\n      <InputGroup>\n        <InputLeftAddon children=\"Find contacts :\" fontSize=\"1em\" />\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n          fontSize=\"1em\"\n          mb={2}\n        />\n      </InputGroup>\n    </Flex>\n  );\n};\n","import {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\n\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n} from '@chakra-ui/react';\nimport { usePreparedToast } from 'hooks/hooks';\n\nexport const Form = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { contactAddedToast, existingContactToast } = usePreparedToast();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === nameValue.toLowerCase()\n      )\n    ) {\n      form.reset();\n      return existingContactToast();\n    }\n\n    addContact({ name: nameValue, number: numberValue }).then(\n      contactAddedToast()\n    );\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Stack as=\"form\" spacing={2} onSubmit={handleAddContact} mb={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"Name:\" w=\"5.2rem\" fontSize=\"1em\" />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Only letters, apostrophe, dash and spaces.\"\n            required\n            placeholder=\"Enter name\"\n            w=\"17rem\"\n            fontSize=\"1em\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"Number:\" w=\"5.2rem\" fontSize=\"1em\" />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            w=\"17rem\"\n            fontSize=\"1em\"\n          />\n        </InputGroup>\n        <Button type=\"submit\" disabled={isLoading} fontSize={'l'}>\n          Add contact\n        </Button>\n      </Stack>\n    </>\n  );\n};\n","import { Box, Text } from '@chakra-ui/layout';\n\nexport const ContactsNotification = ({\n  visibleContacts,\n  savedContactsNumber,\n}) => {\n  return (\n    <Box textAlign=\"center\">\n      {savedContactsNumber !== visibleContacts ? (\n        <Text>\n          Found contacts: <b>{visibleContacts}</b>\n        </Text>\n      ) : (\n        <Text>\n          Total number of contacts: <b>{savedContactsNumber}</b>\n        </Text>\n      )}\n    </Box>\n  );\n};\n","const { useGetContactsQuery } = require('redux/contacts/contactsSlice');\n\nexport const Loader = () => {\n  const { error, isLoading } = useGetContactsQuery();\n\n  return isLoading && !error && <b>Request in progress...</b>;\n};\n","import { Flex, Heading } from '@chakra-ui/layout';\nimport { useColorModeValue } from '@chakra-ui/react';\nimport { ContactsList, Filter, Form } from 'components';\nimport { Loader } from 'components/Loader';\nimport { FcContacts, FcList } from 'react-icons/fc';\n\nexport default function Contacts() {\n  const bgColor = useColorModeValue('gray.50', 'gray.700');\n\n  return (\n    <Flex\n      name=\"flex\"\n      direction=\"column\"\n      align=\"center\"\n      pt={10}\n      px={10}\n      bg={bgColor}\n      h=\"100%\"\n    >\n      <Heading\n        as={'h1'}\n        fontSize={'2xl'}\n        display=\"flex\"\n        alignItems=\"flex-end\"\n        mb={2}\n      >\n        Phonebook <FcContacts />\n      </Heading>\n\n      <Form />\n      <Heading\n        as={'h2'}\n        fontSize={'xl'}\n        display=\"flex\"\n        alignItems=\"flex-end\"\n        mb={2}\n      >\n        Contacts <FcList />\n      </Heading>\n\n      <Filter />\n      <Loader />\n      <ContactsList />\n    </Flex>\n  );\n}\n"],"names":["RegisterForm","handleSignUp","useState","showPassword","setShowPassword","bgColor","useColorModeValue","align","justify","bg","spacing","mx","maxW","py","px","fontSize","textAlign","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","size","type","name","placeholder","pattern","h","variant","onClick","pt","loadingText","_hover","NavLink","to","ml","selectFilter","state","filter","filterValue","ContactsListItem","contact","number","useDeleteContactMutation","deleteContact","isLoading","isSuccess","toast","useToast","checkIsDeleted","mr","md","lg","fontWeight","unwrap","position","title","status","isClosable","disabled","ContactsList","useSelector","useGetContactsQuery","data","contacts","normalizedFilter","toLowerCase","trim","visibleContacts","includes","w","base","map","display","alignItems","BsPhone","boxSize","ContactsNotification","length","savedContactsNumber","Filter","dispatch","useDispatch","children","onChange","e","inputValue","target","value","filterList","mb","Form","useAddContactMutation","addContact","usePreparedToast","contactAddedToast","existingContactToast","preventDefault","form","nameValue","elements","numberValue","some","reset","then","required","require","Loader","error","Contacts","direction"],"sourceRoot":""}