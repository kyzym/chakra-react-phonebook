{"version":3,"file":"static/js/285.543e7a82.chunk.js","mappings":"4QAcaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC7B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,IAAkB,WAAY,YAE9C,OACE,SAAC,KAAD,CACEC,KAAM,CAAEC,KAAM,OAAQC,GAAI,SAAUC,GAAI,QACxCC,MAAO,SACPC,QAAS,SACTC,GAAIR,EAJN,UAME,UAAC,KAAD,CAAOS,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,EAAGC,GAAI,EAAtD,WACE,UAAC,KAAD,CAAOP,MAAO,SAAd,WACE,SAAC,KAAD,CAASQ,SAAU,MAAOC,UAAW,SAArC,sCAGA,SAAC,KAAD,CAAMD,SAAU,KAAME,MAAO,WAA7B,oDAIF,SAAC,KAAD,CACEC,QAAS,KACTT,IAAIP,EAAAA,EAAAA,IAAkB,QAAS,YAC/BiB,UAAW,KACXC,EAAG,EAJL,UAME,UAAC,KAAD,CAAOV,QAAS,EAAGW,GAAG,OAAOC,SAAUzB,EAAvC,WACE,UAAC,KAAD,CAAa0B,GAAG,YAAYC,YAAU,EAAtC,WACE,SAAC,KAAD,wBACA,SAAC,KAAD,CACEC,KAAK,KACLC,KAAK,OACLC,KAAK,WACLC,YAAY,uBAIhB,UAAC,KAAD,CAAaL,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,KAAD,6BACA,SAAC,KAAD,CACEC,KAAK,KACLC,KAAK,QACLC,KAAK,QACLC,YAAY,uBAGhB,UAAC,KAAD,CAAaL,GAAG,WAAWC,YAAU,EAArC,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,KACLC,KAAM3B,EAAe,OAAS,WAC9B4B,KAAK,WACLE,QAAQ,uCACRD,YAAY,kCAEd,SAAC,KAAD,CAAmBE,EAAG,OAAtB,UACE,SAAC,KAAD,CACEC,QAAS,QACTC,QAAS,kBACPhC,GAAgB,SAAAD,GAAY,OAAKA,CAAL,GADrB,EAFX,SAMGA,GAAe,SAAC,KAAD,KAAe,SAAC,KAAD,eAKvC,SAAC,KAAD,CAAOkC,GAAI,EAAX,UACE,SAAC,KAAD,CACEP,KAAK,SACLQ,YAAY,aACZT,KAAK,KACLV,SAAU,KACVN,GAAI,WACJQ,MAAO,QACPkB,OAAQ,CACN1B,GAAI,YARR,wBAcF,SAAC,KAAD,CAAOwB,GAAI,EAAX,UACE,UAAC,KAAD,CAAM1B,MAAO,SAAUQ,SAAU,KAAjC,6BAEE,SAAC,KAAD,CACEM,GAAIe,EAAAA,GACJC,GAAG,SACHpB,MAAO,WACPF,SAAU,KACVuB,GAAG,IALL,iCAgBf,C,+JC9Gc,SAASC,IACtB,OAAuBC,EAAAA,EAAAA,2BAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEX9C,EAAY,mCAAG,WAAM+C,GAAN,gFACnBA,EAAEC,iBAEIC,EAAOF,EAAEG,OAHI,SAIDN,EAAa,CAC7Bd,KAAMmB,EAAKE,SAASC,SAASC,MAC7BC,MAAOL,EAAKE,SAASG,MAAMD,MAC3BE,SAAUN,EAAKE,SAASI,SAASF,QAChCG,SARgB,OAIbC,EAJa,OAUnBZ,GAASa,EAAAA,EAAAA,IAAeD,IACxBR,EAAKU,QAXc,2CAAH,sDAclB,OAAO,SAAC,IAAD,CAAc3D,aAAcA,GACpC,C","sources":["components/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/layout';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterForm = ({ handleSignUp }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const bgColor = useColorModeValue('gray.200', 'gray.700');\n\n  return (\n    <Flex\n      minH={{ base: '78vh', md: '83.7vh', lg: '85vh' }}\n      align={'center'}\n      justify={'center'}\n      bg={bgColor}\n    >\n      <Stack spacing={1} mx={'auto'} maxW={'lg'} py={3} px={3}>\n        <Stack align={'center'}>\n          <Heading fontSize={'2xl'} textAlign={'center'}>\n            Sign up to your account\n          </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy our cool APP ✌️\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={1} as=\"form\" onSubmit={handleSignUp}>\n            <FormControl id=\"firstName\" isRequired>\n              <FormLabel>Nickname</FormLabel>\n              <Input\n                size=\"md\"\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Sara Repetovna\"\n              />\n            </FormControl>\n\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                size=\"md\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email@mail.com\"\n              />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  size=\"md\"\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"md\"\n                fontSize={'md'}\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            <Stack pt={1}>\n              <Text align={'center'} fontSize={'md'}>\n                Already a user?\n                <Link\n                  as={NavLink}\n                  to=\"/login\"\n                  color={'blue.400'}\n                  fontSize={'lg'}\n                  ml=\"1\"\n                >\n                  Login\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n","import { useRegisterUserMutation } from 'redux/contactsSlice';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from 'redux/auth/authSlice';\n\nimport { RegisterForm } from '../components/RegisterForm';\n\nexport default function SignupCard() {\n  const [registerUser] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const res = await registerUser({\n      name: form.elements.username.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    }).unwrap();\n\n    dispatch(setCredentials(res));\n    form.reset();\n  };\n\n  return <RegisterForm handleSignUp={handleSignUp} />;\n}\n"],"names":["RegisterForm","handleSignUp","useState","showPassword","setShowPassword","bgColor","useColorModeValue","minH","base","md","lg","align","justify","bg","spacing","mx","maxW","py","px","fontSize","textAlign","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","size","type","name","placeholder","pattern","h","variant","onClick","pt","loadingText","_hover","NavLink","to","ml","SignupCard","useRegisterUserMutation","registerUser","dispatch","useDispatch","e","preventDefault","form","target","elements","username","value","email","password","unwrap","res","setCredentials","reset"],"sourceRoot":""}