{"version":3,"file":"static/js/319.0994bda2.chunk.js","mappings":"oTAmBaA,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC1B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,IAAkB,WAAY,YAE9C,OACE,SAAC,KAAD,CAAMC,UAAU,YAAYC,QAAS,SAAUC,GAAIJ,EAAnD,UACE,UAAC,KAAD,CAAOK,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,EAAGC,GAAI,EAAtD,WACE,UAAC,KAAD,CAAOC,MAAO,SAAd,WACE,SAAC,KAAD,CAASC,SAAU,MAAnB,uCACA,SAAC,KAAD,CAAMA,SAAU,KAAMC,MAAO,WAA7B,sDAIF,SAAC,KAAD,CACEC,QAAS,KACTT,IAAIH,EAAAA,EAAAA,IAAkB,QAAS,YAC/Ba,UAAW,KACXC,EAAG,EAJL,UAME,UAAC,KAAD,CAAOV,QAAS,EAAGW,GAAG,OAAOC,SAAUrB,EAAvC,WACE,UAAC,KAAD,CAAasB,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,yBAE/C,UAAC,KAAD,CAAaJ,GAAG,WAAWC,YAAU,EAArC,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAMtB,EAAe,OAAS,WAC9BuB,KAAK,WACLE,QAAQ,iBACRD,YAAY,kCAEd,SAAC,KAAD,CAAmBE,EAAG,OAAtB,UACE,SAAC,KAAD,CACEC,QAAS,QACTC,QAAS,kBACP3B,GAAgB,SAAAD,GAAY,OAAKA,CAAL,GADrB,EAFX,SAMGA,GAAe,SAAC,KAAD,KAAe,SAAC,KAAD,eAKvC,UAAC,KAAD,CAAOO,QAAS,EAAhB,WACE,SAAC,KAAD,CACEsB,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjCnB,MAAO,QACPP,QAAS,mBAEX,SAAC,KAAD,CACEiB,KAAK,SACLhB,GAAI,WACJQ,MAAO,QACPkB,OAAQ,CACN1B,GAAI,YALR,yBAWF,SAAC,KAAD,CAAO2B,GAAI,EAAX,UACE,UAAC,KAAD,CAAMrB,MAAO,SAAb,4CAEE,SAAC,KAAD,CACEM,GAAIgB,EAAAA,GACJC,GAAG,YACHrB,MAAO,WACPD,SAAU,KACVuB,GAAG,IALL,mCAgBf,E,wCC9Fc,SAASC,IACtB,OAAoBC,EAAAA,EAAAA,wBAAbC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEX3C,EAAW,mCAAG,WAAM4C,GAAN,kFAClBA,EAAEC,iBACIC,EAAOF,EAAEG,OAFG,SAGAN,EAAU,CAC1BO,MAAOF,EAAKG,SAASD,MAAME,MAC3BC,SAAUL,EAAKG,SAASE,SAASD,QAChCE,SANe,OAGZC,EAHY,QAQZC,EAAWD,EAAIE,KAAK9B,OAGxB+B,EAAAA,GAAAA,QAAA,gBAAuBF,EAAvB,iBAAsC,CAAEG,SAAU,eAEpDf,GAASgB,EAAAA,EAAAA,IAAeL,IACxBP,EAAKa,QAda,2CAAH,sDAiBjB,OAAO,SAAC5D,EAAD,CAAWC,YAAaA,GAChC,C","sources":["components/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  FormControl,\n  FormLabel,\n  Stack,\n  useColorModeValue,\n  Box,\n  Heading,\n  Text,\n  Flex,\n  Link,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const LoginForm = ({ handleLogin }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const bgColor = useColorModeValue('gray.200', 'gray.700');\n\n  return (\n    <Flex className=\"loginForm\" justify={'center'} bg={bgColor}>\n      <Stack spacing={1} mx={'auto'} maxW={'lg'} py={3} px={3}>\n        <Stack align={'center'}>\n          <Heading fontSize={'2xl'}>Sign in to your account </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy your Phone Book‚úåÔ∏è\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={2} as=\"form\" onSubmit={handleLogin}>\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={2}>\n              <Stack\n                direction={{ base: 'column', sm: 'row' }}\n                align={'start'}\n                justify={'space-between'}\n              ></Stack>\n              <Button\n                type=\"submit\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign in\n              </Button>\n            </Stack>\n            <Stack pt={1}>\n              <Text align={'center'}>\n                Need an account? Register now!\n                <Link\n                  as={NavLink}\n                  to=\"/register\"\n                  color={'blue.400'}\n                  fontSize={'lg'}\n                  ml=\"1\"\n                >\n                  Sign Up\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useLogInUserMutation } from 'redux/contacts/contactsSlice';\n\nexport default function Login() {\n  const [loginUser] = useLogInUserMutation();\n  const dispatch = useDispatch();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const res = await loginUser({\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    }).unwrap();\n\n    const userName = res.user.name;\n\n    userName &&\n      toast.success(`Hello ${userName} ü•≥`, { position: 'top-center' });\n\n    dispatch(setCredentials(res));\n    form.reset();\n  };\n\n  return <LoginForm handleLogin={handleLogin} />;\n}\n"],"names":["LoginForm","handleLogin","useState","showPassword","setShowPassword","bgColor","useColorModeValue","className","justify","bg","spacing","mx","maxW","py","px","align","fontSize","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","type","name","placeholder","pattern","h","variant","onClick","direction","base","sm","_hover","pt","NavLink","to","ml","Login","useLogInUserMutation","loginUser","dispatch","useDispatch","e","preventDefault","form","target","email","elements","value","password","unwrap","res","userName","user","toast","position","setCredentials","reset"],"sourceRoot":""}