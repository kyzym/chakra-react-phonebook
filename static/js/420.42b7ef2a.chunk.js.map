{"version":3,"file":"static/js/420.42b7ef2a.chunk.js","mappings":"4QAcaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC7B,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,SAAC,KAAD,CACEC,KAAM,OACNC,MAAO,SACPC,QAAS,SACTC,IAAIC,EAAAA,EAAAA,IAAkB,UAAW,YAJnC,UAME,UAAC,KAAD,CAAOC,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,WACE,UAAC,KAAD,CAAOR,MAAO,SAAd,WACE,SAAC,KAAD,CAASS,SAAU,MAAOC,UAAW,SAArC,sCAGA,SAAC,KAAD,CAAMD,SAAU,KAAME,MAAO,WAA7B,oDAIF,SAAC,KAAD,CACEC,QAAS,KACTV,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BU,UAAW,KACXC,EAAG,EAJL,UAME,UAAC,KAAD,CAAOV,QAAS,EAAGW,GAAG,OAAOC,SAAUrB,EAAvC,WACE,UAAC,KAAD,CAAasB,GAAG,YAAYC,YAAU,EAAtC,WACE,SAAC,KAAD,CAAWT,SAAU,KAArB,uBACA,SAAC,KAAD,CACEU,KAAK,KACLC,KAAK,OACLC,KAAK,WACLC,YAAY,uBAIhB,UAAC,KAAD,CAAaL,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,KAAD,CAAWT,SAAU,KAArB,4BACA,SAAC,KAAD,CACEU,KAAK,KACLC,KAAK,QACLC,KAAK,QACLC,YAAY,uBAGhB,UAAC,KAAD,CAAaL,GAAG,WAAWC,YAAU,EAArC,WACE,SAAC,KAAD,CAAWT,SAAU,KAArB,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEU,KAAK,KACLC,KAAMvB,EAAe,OAAS,WAC9BwB,KAAK,WACLE,QAAQ,uCACRD,YAAY,kCAEd,SAAC,KAAD,CAAmBE,EAAG,OAAtB,UACE,SAAC,KAAD,CACEC,QAAS,QACTC,QAAS,kBACP5B,GAAgB,SAAAD,GAAY,OAAKA,CAAL,GADrB,EAFX,SAMGA,GAAe,SAAC,KAAD,KAAe,SAAC,KAAD,eAKvC,SAAC,KAAD,CAAOO,QAAS,GAAIuB,GAAI,EAAxB,UACE,SAAC,KAAD,CACEP,KAAK,SACLQ,YAAY,aACZT,KAAK,KACLV,SAAU,KACVP,GAAI,WACJS,MAAO,QACPkB,OAAQ,CACN3B,GAAI,YARR,wBAcF,SAAC,KAAD,CAAOyB,GAAI,EAAX,UACE,UAAC,KAAD,CAAM3B,MAAO,SAAUS,SAAU,KAAjC,6BAEE,SAAC,KAAD,CACEM,GAAIe,EAAAA,GACJC,GAAG,SACHpB,MAAO,WACPF,SAAU,MACVuB,GAAG,IALL,iCAgBf,C,8GCnHYC,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,WAAjB,E,iDCMpBC,EAAmB,SAAC,GAAuC,IAAD,IAApCC,QAAWjB,EAAyB,EAAzBA,KAAMkB,EAAmB,EAAnBA,OAAQtB,EAAW,EAAXA,GAC1D,GAAkDuB,EAAAA,EAAAA,4BAAlD,eAAOC,EAAP,YAAwBC,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,UAK7BC,EAAiBF,GAAaC,EAEpC,OACE,iCACE,SAAC,KAAD,CACEX,GAAI,KACJa,GAAI,OACJpC,SAAU,CAAEqC,GAAI,IAAKC,GAAI,KACzBC,WAAY,MAJd,SAMG3B,KAEH,SAAC,KAAD,CACEW,GAAI,OACJa,GAAI,KACJG,WAAY,MACZvC,SAAU,CAAEqC,GAAI,IAAKC,GAAI,KAJ3B,SAMGR,KAEH,SAAC,KAAD,CAAQb,QAvBS,WACnBe,EAAcxB,GAAIgC,KAAKC,EAAAA,GAAAA,QAAA,+BAAsC7B,EAAtC,MACxB,EAqBkC8B,SAAUP,EAAgBjC,MAAM,UAA/D,UACE,SAAC,MAAD,CAASQ,KAAM,SAItB,EC3BYiC,EAAe,WAC1B,IAAMjB,GAASkB,EAAAA,EAAAA,IAAYpB,GAE3B,GAA2CqB,EAAAA,EAAAA,uBAA3C,IAAQC,KAAMC,OAAd,MAAyB,GAAzB,EAA6Bd,EAA7B,EAA6BA,UAEvBe,EAAmBtB,EAAOuB,cAAcC,OACxCC,EAAkBJ,EAASrB,QAAO,qBAAGd,KACpCqC,cAAcG,SAASJ,EADU,IAIxC,OACE,iCACE,SAAC,KAAD,CAAMrD,QAAS,EAAG0D,EAAG,CAAEhB,GAAI,QAASC,GAAI,SAAxC,SACGa,EAAgBG,KAAI,SAAAzB,GAAO,OAC1B,UAAC,KAAD,CAEEwB,EAAE,OACFE,QAAQ,OACRC,WAAW,SAJb,WAME,SAAC,KAAD,CACElD,GAAImD,EAAAA,IACJC,QAAS,CAAErB,GAAI,EAAGC,GAAI,GACtBpC,MAAM,cAER,SAAC0B,EAAD,CAAkBC,QAASA,MAVtBA,EAAQrB,GAFW,OAiB5ByB,IACA,SAAC0B,EAAD,CACER,gBAAiBA,EAAgBS,OACjCC,oBAAqBd,EAASa,WAKvC,E,mBC5CYE,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBC,SAAS,kBAAkBjE,SAAS,SACpD,SAAC,KAAD,CACEW,KAAK,OACLC,KAAK,SACLC,YAAY,aACZqD,SAda,SAAAC,GACnB,IAAMC,EAAaD,EAAEE,OAAOC,MAE5BP,GAASQ,EAAAA,EAAAA,IAAWH,GACrB,EAWOpE,SAAS,MACTwE,GAAI,QAKb,E,sBC1BsBC,EAAAA,EAAAA,KAAH,4HAQCA,EAAAA,EAAAA,MAAH,4HAOGA,EAAAA,EAAAA,MAAH,iFAMIA,EAAAA,EAAAA,OAAH,gS,SCTNC,EAAO,WAClB,IAAc3B,GAAaF,EAAAA,EAAAA,uBAAnBC,KACFL,GAAQkC,EAAAA,EAAAA,MAEd,GAAoCC,EAAAA,EAAAA,yBAApC,eAAOC,EAAP,KAAqB5C,EAArB,KAAqBA,UAmCrB,OACE,+BACE,UAAC,KAAD,CAAO3B,GAAG,OAAOX,QAAS,EAAGY,SAnCR,SAAA4D,GACvBA,EAAEW,iBAEF,IAAMC,EAAOZ,EAAEE,OACTW,EAAYD,EAAKE,SAASrE,KAAK0D,MAC/BY,EAAcH,EAAKE,SAASnD,OAAOwC,MAEzC,GACEvB,EAASoC,MACP,SAAAtD,GAAO,OAAIA,EAAQjB,KAAKqC,gBAAkB+B,EAAU/B,aAA7C,IAIT,OADA8B,EAAKK,QACE3C,EAAM,CACX4C,SAAU,aACVC,MAAM,kDACNC,OAAQ,OACRC,YAAY,IAIhBX,EAAW,CAAEjE,KAAMoE,EAAWlD,OAAQoD,IAEtCzC,EAAM,CACJ4C,SAAU,MACVC,MAAO,wCACPC,OAAQ,UACRC,YAAY,IAGdT,EAAKK,OACN,EAI4DZ,GAAI,EAA7D,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBP,SAAS,QAAQZ,EAAE,SAASrD,SAAS,SACrD,SAAC,KAAD,CACEW,KAAK,OACLC,KAAK,OACLE,QAAQ,yHACRwE,MAAM,6CACNG,UAAQ,EACR5E,YAAY,aACZwC,EAAG,CAAEqC,KAAM,QAASpD,GAAI,SACxBtC,SAAS,YAGb,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBiE,SAAS,UAAUZ,EAAE,SAASrD,SAAS,SACvD,SAAC,KAAD,CACEW,KAAK,MACLC,KAAK,SACLE,QAAQ,yFACRwE,MAAM,+FACNG,UAAQ,EACR5E,YAAY,qBACZwC,EAAG,CAAEqC,KAAM,QAASpD,GAAI,SACxBtC,SAAS,YAGb,SAAC,KAAD,CAAQW,KAAK,SAAS+B,SAAUT,EAAWjC,SAAU,IAArD,6BAMP,ECtFY2D,EAAuB,SAAC,GAG9B,IAFLR,EAEI,EAFJA,gBACAU,EACI,EADJA,oBAEA,OACE,SAAC,KAAD,CAAK5D,UAAU,SAAf,SACG4D,IAAwBV,GACvB,UAAC,KAAD,+BACkB,uBAAIA,QAGtB,UAAC,KAAD,yCAC4B,uBAAIU,QAKvC,ECnBOhB,G,QAAwB8C,EAAQ,MAAhC9C,qBAEK+C,EAAS,WACpB,MAA6B/C,IAArBgD,EAAR,EAAQA,MAER,OAFA,EAAe5D,YAEM4D,IAAS,iDAC/B,E,UCDc,SAASC,IACtB,OACE,UAAC,KAAD,CAAMC,UAAU,SAASxG,MAAM,SAASyG,GAAI,GAAIjG,GAAI,GAApD,WACE,UAAC,KAAD,CACEO,GAAI,KACJN,SAAU,MACVuD,QAAQ,OACRC,WAAW,WACXgB,GAAI,EALN,wBAOY,SAAC,MAAD,QAGZ,SAACE,EAAD,KACA,UAAC,KAAD,CACEpE,GAAI,KACJN,SAAU,KACVuD,QAAQ,OACRC,WAAW,WACXgB,GAAI,EALN,uBAOW,SAAC,MAAD,QAGX,SAACV,EAAD,KACA,SAAC8B,EAAD,KACA,SAACjD,EAAD,MAGL,C","sources":["components/RegisterForm.jsx","redux/filter/selectors.js","components/ContactListItem/ContactsListItem.jsx","components/ContactList/ContactsList.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Notification/Notification.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/layout';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterForm = ({ handleSignUp }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Flex\n      minH={'70vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'} textAlign={'center'}>\n            Sign up to your account\n          </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy our cool APP ✌️\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={4} as=\"form\" onSubmit={handleSignUp}>\n            <FormControl id=\"firstName\" isRequired>\n              <FormLabel fontSize={'xl'}>Nickname</FormLabel>\n              <Input\n                size=\"lg\"\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Sara Repetovna\"\n              />\n            </FormControl>\n\n            <FormControl id=\"email\" isRequired>\n              <FormLabel fontSize={'xl'}>Email address</FormLabel>\n              <Input\n                size=\"lg\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email@mail.com\"\n              />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel fontSize={'xl'}>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  size=\"lg\"\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={10} pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"lg\"\n                fontSize={'xl'}\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            <Stack pt={1}>\n              <Text align={'center'} fontSize={'xl'}>\n                Already a user?\n                <Link\n                  as={NavLink}\n                  to=\"/login\"\n                  color={'blue.400'}\n                  fontSize={'2xl'}\n                  ml=\"1\"\n                >\n                  Login\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n","export const selectFilter = state => state.filter.filterValue;\n","import { BsTrash } from 'react-icons/bs';\nimport { Text } from '@chakra-ui/layout';\nimport { Button } from '@chakra-ui/react';\nimport { toast } from 'react-hot-toast';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactsListItem = ({ contact: { name, number, id } }) => {\n  const [deleteContact, { isLoading, isSuccess }] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id).then(toast.success(`OK, we've removed -  ${name} `));\n  };\n  const checkIsDeleted = isLoading || isSuccess;\n\n  return (\n    <>\n      <Text\n        ml={'5%'}\n        mr={'auto'}\n        fontSize={{ md: 'l', lg: 'l' }}\n        fontWeight={'500'}\n      >\n        {name}\n      </Text>\n      <Text\n        ml={'auto'}\n        mr={'5%'}\n        fontWeight={'500'}\n        fontSize={{ md: 'l', lg: 'l' }}\n      >\n        {number}\n      </Text>\n      <Button onClick={handleDelete} disabled={checkIsDeleted} color=\"#f44336\">\n        <BsTrash size={20} />\n      </Button>\n    </>\n  );\n};\n","import { ContactsNotification } from 'components';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactsListItem';\n\nimport { List, ListIcon, ListItem } from '@chakra-ui/layout';\nimport { BsPhone } from 'react-icons/bs';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n\n  const { data: contacts = [], isLoading } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase().trim();\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <List spacing={2} w={{ md: '430px', lg: '450px' }}>\n        {visibleContacts.map(contact => (\n          <ListItem\n            key={contact.id}\n            w=\"100%\"\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <ListIcon\n              as={BsPhone}\n              boxSize={{ md: 5, lg: 6 }}\n              color=\"blue.500\"\n            />\n            <ContactsListItem contact={contact} />\n          </ListItem>\n        ))}\n      </List>\n\n      {!isLoading && (\n        <ContactsNotification\n          visibleContacts={visibleContacts.length}\n          savedContactsNumber={contacts.length}\n        />\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterList } from 'redux/filter/filtersSlice';\nimport { Flex, Input, InputGroup, InputLeftAddon } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const inputValue = e.target.value;\n\n    dispatch(filterList(inputValue));\n  };\n\n  return (\n    <Flex>\n      <InputGroup>\n        <InputLeftAddon children=\"Find contacts :\" fontSize=\"1em\" />\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n          fontSize=\"1em\"\n          mb={2}\n        />\n      </InputGroup>\n    </Flex>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormTag = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 335px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  width: 250px;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  text-transform: capitalize;\n  padding: 8px;\n  border-radius: 20px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  focus {\n    outline: 1.5px solid black;\n  }\n  &:active {\n    background-color: #cdcdcd;\n  }\n`;\n","import {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\n\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n  useToast,\n} from '@chakra-ui/react';\n\nexport const Form = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const toast = useToast();\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === nameValue.toLowerCase()\n      )\n    ) {\n      form.reset();\n      return toast({\n        position: 'top-center',\n        title: `Can't add already existing contact 😭`,\n        status: 'info',\n        isClosable: true,\n      });\n    }\n\n    addContact({ name: nameValue, number: numberValue });\n\n    toast({\n      position: 'top',\n      title: 'Superrr!!! Contact added 🥳',\n      status: 'success',\n      isClosable: true,\n    });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Stack as=\"form\" spacing={2} onSubmit={handleAddContact} mb={4}>\n        <InputGroup>\n          <InputLeftAddon children=\"Name:\" w=\"5.2rem\" fontSize=\"1em\" />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Only letters, apostrophe, dash and spaces.\"\n            required\n            placeholder=\"Enter name\"\n            w={{ base: '17rem', lg: '17rem' }}\n            fontSize=\"1em\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children=\"Number:\" w=\"5.2rem\" fontSize=\"1em\" />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            w={{ base: '15rem', lg: '17rem' }}\n            fontSize=\"1em\"\n          />\n        </InputGroup>\n        <Button type=\"submit\" disabled={isLoading} fontSize={'l'}>\n          Add contact\n        </Button>\n      </Stack>\n    </>\n  );\n};\n","import { Box, Text } from '@chakra-ui/layout';\n\nexport const ContactsNotification = ({\n  visibleContacts,\n  savedContactsNumber,\n}) => {\n  return (\n    <Box textAlign=\"center\">\n      {savedContactsNumber !== visibleContacts ? (\n        <Text>\n          Found contacts: <b>{visibleContacts}</b>\n        </Text>\n      ) : (\n        <Text>\n          Total number of contacts: <b>{savedContactsNumber}</b>\n        </Text>\n      )}\n    </Box>\n  );\n};\n","const { useGetContactsQuery } = require('redux/contactsSlice');\n\nexport const Loader = () => {\n  const { error, isLoading } = useGetContactsQuery();\n\n  return isLoading && !error && <b>Request in progress...</b>;\n};\n","import { Flex, Heading } from '@chakra-ui/layout';\nimport { ContactsList, Filter, Form } from 'components';\nimport { Loader } from 'components/Loader/Loader';\nimport { FcContacts, FcList } from 'react-icons/fc';\n\nexport default function Contacts() {\n  return (\n    <Flex direction=\"column\" align=\"center\" mt={10} px={10}>\n      <Heading\n        as={'h1'}\n        fontSize={'2xl'}\n        display=\"flex\"\n        alignItems=\"flex-end\"\n        mb={2}\n      >\n        Phonebook <FcContacts />\n      </Heading>\n\n      <Form />\n      <Heading\n        as={'h2'}\n        fontSize={'xl'}\n        display=\"flex\"\n        alignItems=\"flex-end\"\n        mb={2}\n      >\n        Contacts <FcList />\n      </Heading>\n\n      <Filter />\n      <Loader />\n      <ContactsList />\n    </Flex>\n  );\n}\n"],"names":["RegisterForm","handleSignUp","useState","showPassword","setShowPassword","minH","align","justify","bg","useColorModeValue","spacing","mx","maxW","py","px","fontSize","textAlign","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","size","type","name","placeholder","pattern","h","variant","onClick","pt","loadingText","_hover","NavLink","to","ml","selectFilter","state","filter","filterValue","ContactsListItem","contact","number","useDeleteContactMutation","deleteContact","isLoading","isSuccess","checkIsDeleted","mr","md","lg","fontWeight","then","toast","disabled","ContactsList","useSelector","useGetContactsQuery","data","contacts","normalizedFilter","toLowerCase","trim","visibleContacts","includes","w","map","display","alignItems","BsPhone","boxSize","ContactsNotification","length","savedContactsNumber","Filter","dispatch","useDispatch","children","onChange","e","inputValue","target","value","filterList","mb","styled","Form","useToast","useAddContactMutation","addContact","preventDefault","form","nameValue","elements","numberValue","some","reset","position","title","status","isClosable","required","base","require","Loader","error","Contacts","direction","mt"],"sourceRoot":""}