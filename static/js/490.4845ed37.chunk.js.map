{"version":3,"file":"static/js/490.4845ed37.chunk.js","mappings":"wUA+BaA,EAAQ,WAInB,OAAoBC,EAAAA,EAAAA,wBAAbC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,mCAAG,WAAMC,GAAN,gFAClBA,EAAEC,iBACIC,EAAOF,EAAEG,OAFG,SAGAP,EAAU,CAC1BQ,MAAOF,EAAKG,SAASD,MAAME,MAC3BC,SAAUL,EAAKG,SAASE,SAASD,QAChCE,SANe,OAGZC,EAHY,OAQlBZ,GAASa,EAAAA,EAAAA,IAAeD,IACxBP,EAAKS,QATa,2CAAH,sDAYjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,SAAC,KAAD,CACEC,KAAM,QACNC,MAAO,SACPC,QAAS,SACTC,IAAIC,EAAAA,EAAAA,IAAkB,UAAW,YAJnC,UAME,UAAC,KAAD,CAAOC,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,WACE,UAAC,KAAD,CAAOR,MAAO,SAAd,WACE,SAAC,KAAD,CAASS,SAAU,MAAnB,uCACA,SAAC,KAAD,CAAMA,SAAU,KAAMC,MAAO,WAA7B,sDAIF,SAAC,KAAD,CACEC,QAAS,KACTT,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BS,UAAW,KACXC,EAAG,EAJL,UAME,UAAC,KAAD,CAAOT,QAAS,EAAGU,GAAG,OAAOC,SAAUhC,EAAvC,WACE,UAAC,KAAD,CAAaiC,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,cAE3B,UAAC,KAAD,CAAaH,GAAG,WAAWC,YAAU,EAArC,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAMrB,EAAe,OAAS,WAC9BsB,KAAK,WACLC,QAAQ,uCACRC,YAAY,kCAEd,SAAC,KAAD,CAAmBC,EAAG,OAAtB,UACE,SAAC,KAAD,CACEC,QAAS,QACTC,QAAS,kBACP1B,GAAgB,SAAAD,GAAY,OAAKA,CAAL,GADrB,EAFX,SAMGA,GAAe,SAAC,KAAD,KAAe,SAAC,KAAD,eAKvC,UAAC,KAAD,CAAOO,QAAS,EAAhB,WACE,SAAC,KAAD,CACEqB,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjC3B,MAAO,QACPC,QAAS,mBAEX,SAAC,KAAD,CACEiB,KAAK,SACLhB,GAAI,WACJQ,MAAO,QACPkB,OAAQ,CACN1B,GAAI,YALR,iCAgBb,EAED,W","sources":["pages/Login.js"],"sourcesContent":["// import { LoginForm } from 'components/LoginForm/LoginForm';\n\nimport * as React from 'react';\nimport {\n  Input,\n  InputGroup,\n  InputRightElement,\n  // VStack,\n  Button,\n  // Divider,\n  // Center,\n  FormControl,\n  FormLabel,\n  Stack,\n  useColorModeValue,\n  Box,\n  Heading,\n  Text,\n  Flex,\n  // Box,\n  // useToast,\n} from '@chakra-ui/react';\n\nimport { useDispatch } from 'react-redux';\nimport { useLogInUserMutation } from 'redux/contactsSlice';\nimport { setCredentials } from 'redux/auth/authSlice';\n// import { useNavigate } from 'react-router';\n// import SimpleCard from 'components/SimpleLogin';\nimport { useState } from 'react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nexport const Login = () => {\n  // const toast = useToast();\n  // const [login, { isLoading }] = useLoginMutation();\n\n  const [loginUser] = useLogInUserMutation();\n  const dispatch = useDispatch();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const res = await loginUser({\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    }).unwrap();\n\n    dispatch(setCredentials(res));\n    form.reset();\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'}>Sign in to your account </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy your Phone Book✌️\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={4} as=\"form\" onSubmit={handleLogin}>\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" name=\"email\" />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={5}>\n              <Stack\n                direction={{ base: 'column', sm: 'row' }}\n                align={'start'}\n                justify={'space-between'}\n              ></Stack>\n              <Button\n                type=\"submit\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign in\n              </Button>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default Login;\n"],"names":["Login","useLogInUserMutation","loginUser","dispatch","useDispatch","handleLogin","e","preventDefault","form","target","email","elements","value","password","unwrap","res","setCredentials","reset","useState","showPassword","setShowPassword","minH","align","justify","bg","useColorModeValue","spacing","mx","maxW","py","px","fontSize","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","type","name","pattern","placeholder","h","variant","onClick","direction","base","sm","_hover"],"sourceRoot":""}