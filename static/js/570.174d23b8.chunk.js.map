{"version":3,"file":"static/js/570.174d23b8.chunk.js","mappings":"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","sources":["redux/selectors.js","components/utils/Box.styled.jsx","components/ContactList/ContactListItem/ContactsListItem.styled.jsx","components/ContactList/ContactListItem/ContactsListItem.jsx","components/ContactList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Notification/Notification.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter.filterValue;\n","import styled from 'styled-components';\n\nimport {\n  border,\n  color,\n  flexbox,\n  space,\n  layout,\n  shadow,\n  typography,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  border,\n  color,\n  flexbox,\n  shadow,\n  layout,\n  space,\n  typography,\n  grid\n);\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  /* justify-content: space-between; */\n`;\n\nexport const DelButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #f44336;\n\n  &:hover {\n    background-color: #e2e5e8;\n  }\n  &:active {\n    background-color: #bdbdbd;\n  }\n  &:disabled {\n    color: black;\n  }\n`;\n\nexport const Name = styled.p`\n  margin-left: 10%;\n  width: 45%;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Number = styled.p`\n  margin-right: auto;\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import { BsPhone } from 'react-icons/bs';\nimport { MdClose } from 'react-icons/md';\nimport { DelButton, Name, Number } from './ContactsListItem.styled';\n\nimport { toast } from 'react-hot-toast';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactsListItem = ({ contact: { name, phone, id } }) => {\n  const [deleteContact, { isLoading, isSuccess }] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id).then(toast.success(`OK, we've removed -  ${name} `));\n  };\n  const checkIsDeleted = isLoading || isSuccess;\n\n  return (\n    <>\n      <BsPhone size={20} />\n      <Name>{name}</Name>\n      <Number>{phone}</Number>\n      <DelButton onClick={handleDelete} disabled={checkIsDeleted}>\n        <MdClose size={24} />\n      </DelButton>\n    </>\n  );\n};\n","import { ContactsNotification } from 'components';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Box } from '../utils/Box.styled';\nimport { ContactsListItem } from './ContactListItem/ContactsListItem';\nimport { Contact } from './ContactListItem/ContactsListItem.styled';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n\n  const { data: contacts = [], isLoading } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase().trim();\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <Box as=\"ul\" width=\"430px\">\n      {visibleContacts.map(contact => (\n        <Contact key={contact.id}>\n          <ContactsListItem contact={contact} />\n        </Contact>\n      ))}\n\n      {!isLoading && (\n        <ContactsNotification\n          visibleContacts={visibleContacts.length}\n          savedContactsNumber={contacts.length}\n        />\n      )}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  gap: 6px;\n  justify-content: space-between;\n  align-items: baseline;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled(DebounceInput)`\n  border-radius: 4px;\n  width: 250px;\n  height: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterList } from 'redux/filtersSlice';\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const inputValue = e.target.value;\n\n    dispatch(filterList(inputValue));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        debounceTimeout={300}\n        onChange={handleChange}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  margin-bottom: 10px;\n`;\n\nexport const SubTitle = styled.h2`\n  display: flex;\n  align-items: flex-end;\n  gap: 6px;\n  margin-bottom: 10px;\n`;\n\nexport const FormTag = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 335px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  width: 250px;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  text-transform: capitalize;\n  padding: 8px;\n  border-radius: 20px;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  focus {\n    outline: 1.5px solid black;\n  }\n  &:active {\n    background-color: #cdcdcd;\n  }\n`;\n","import toast from 'react-hot-toast';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\n\nimport { Button, FormTag, Input, Label } from './ContactForm.styled';\n\nexport const Form = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const nameValue = form.elements.name.value;\n    const numberValue = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === nameValue.toLowerCase()\n      )\n    ) {\n      form.reset();\n      return toast(\"Can't add already existing contact\", {\n        icon: '😭',\n      });\n    }\n\n    addContact({ name: nameValue, phone: numberValue });\n    toast.success('Superrr!!! Contact added');\n\n    form.reset();\n  };\n\n  return (\n    <FormTag onSubmit={handleAddContact}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Only letters, apostrophe, dash and spaces.\"\n          required\n          placeholder=\"Enter name\"\n        />\n      </Label>\n      <Label>\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number\"\n        />\n      </Label>\n\n      <Button type=\"submit\" disabled={isLoading}>\n        add contact\n      </Button>\n    </FormTag>\n  );\n};\n","import { Box } from 'components/utils/Box.styled';\n\nexport const ContactsNotification = ({\n  visibleContacts,\n  savedContactsNumber,\n}) => {\n  return (\n    <Box textAlign=\"center\">\n      {savedContactsNumber !== visibleContacts ? (\n        <span>\n          Found contacts: <b>{visibleContacts}</b>\n        </span>\n      ) : (\n        <span>\n          Total number of contacts: <b>{savedContactsNumber}</b>\n        </span>\n      )}\n    </Box>\n  );\n};\n","const { useGetContactsQuery } = require('redux/contactsSlice');\n\nexport const Loader = () => {\n  const { error, isLoading } = useGetContactsQuery();\n\n  return isLoading && !error && <b>Request in progress...</b>;\n};\n","import { ContactsList, Filter, Form, SubTitle, Title } from 'components';\nimport { Loader } from 'components/Loader/Loader';\nimport { Box } from 'components/utils/Box.styled';\nimport { FcContacts, FcList } from 'react-icons/fc';\n\nexport default function Contacts() {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      mt={10}\n      px={10}\n    >\n      <Title>\n        Phonebook\n        <FcContacts />\n      </Title>\n      <Form />\n      <SubTitle>\n        Contacts\n        <FcList />\n      </SubTitle>\n      <Filter />\n      <Loader />\n      <ContactsList />\n    </Box>\n  );\n}\n"],"names":["selectFilter","state","filter","filterValue","Box","styled","border","color","flexbox","shadow","layout","space","typography","grid","Contact","DelButton","Name","Number","ContactsListItem","contact","name","phone","id","useDeleteContactMutation","deleteContact","isLoading","isSuccess","checkIsDeleted","size","onClick","then","toast","disabled","ContactsList","useSelector","useGetContactsQuery","data","contacts","normalizedFilter","toLowerCase","trim","visibleContacts","includes","as","width","map","ContactsNotification","length","savedContactsNumber","FilterLabel","FilterInput","DebounceInput","Filter","dispatch","useDispatch","type","placeholder","debounceTimeout","onChange","e","inputValue","target","value","filterList","Title","SubTitle","FormTag","Label","Input","Button","Form","useAddContactMutation","addContact","onSubmit","preventDefault","form","nameValue","elements","numberValue","number","some","reset","icon","pattern","title","required","textAlign","require","Loader","error","Contacts","display","flexDirection","alignItems","mt","px"],"sourceRoot":""}