{"version":3,"file":"static/js/756.a07aaae1.chunk.js","mappings":"mVAyBe,SAASA,IACtB,OAAuBC,EAAAA,EAAAA,2BAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,gFACnBA,EAAEC,iBAEIC,EAAOF,EAAEG,OAHI,SAIDP,EAAa,CAC7BQ,KAAMF,EAAKG,SAASC,SAASC,MAC7BC,MAAON,EAAKG,SAASG,MAAMD,MAC3BE,SAAUP,EAAKG,SAASI,SAASF,QAChCG,SARgB,OAIbC,EAJa,OAUnBd,GAASe,EAAAA,EAAAA,IAAeD,IACxBT,EAAKW,QAXc,2CAAH,sDAclB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,SAAC,KAAD,CACEC,KAAM,QACNC,MAAO,SACPC,QAAS,SACTC,IAAIC,EAAAA,EAAAA,IAAkB,UAAW,YAJnC,UAME,UAAC,KAAD,CAAOC,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,WACE,UAAC,KAAD,CAAOR,MAAO,SAAd,WACE,SAAC,KAAD,CAASS,SAAU,MAAOC,UAAW,SAArC,sCAGA,SAAC,KAAD,CAAMD,SAAU,KAAME,MAAO,WAA7B,oDAIF,SAAC,KAAD,CACEC,QAAS,KACTV,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BU,UAAW,KACXC,EAAG,EAJL,UAME,UAAC,KAAD,CAAOV,QAAS,EAAGW,GAAG,OAAOC,SAAUnC,EAAvC,WACE,UAAC,KAAD,CAAaoC,GAAG,YAAYC,YAAU,EAAtC,WACE,SAAC,KAAD,wBACA,SAAC,KAAD,CAAOC,KAAK,OAAOjC,KAAK,WAAWkC,YAAY,uBAGjD,UAAC,KAAD,CAAaH,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,KAAD,6BACA,SAAC,KAAD,CAAOC,KAAK,QAAQjC,KAAK,QAAQkC,YAAY,uBAE/C,UAAC,KAAD,CAAaH,GAAG,WAAWC,YAAU,EAArC,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAMtB,EAAe,OAAS,WAC9BX,KAAK,WACLmC,QAAQ,uCACRD,YAAY,kCAEd,SAAC,KAAD,CAAmBE,EAAG,OAAtB,UACE,SAAC,KAAD,CACEC,QAAS,QACTC,QAAS,kBACP1B,GAAgB,SAAAD,GAAY,OAAKA,CAAL,GADrB,EAFX,SAMGA,GAAe,SAAC,KAAD,KAAe,SAAC,KAAD,eAKvC,SAAC,KAAD,CAAOO,QAAS,GAAIqB,GAAI,EAAxB,UACE,SAAC,KAAD,CACEN,KAAK,SACLO,YAAY,aACZC,KAAK,KACLzB,GAAI,WACJS,MAAO,QACPiB,OAAQ,CACN1B,GAAI,YAPR,wBAaF,SAAC,KAAD,CAAOuB,GAAI,EAAX,UACE,UAAC,KAAD,CAAMzB,MAAO,SAAb,6BAEE,SAAC,KAAD,CAAMe,GAAIc,EAAAA,GAASC,GAAG,SAASnB,MAAO,WAAtC,iCAUf,C","sources":["pages/Register.js"],"sourcesContent":["import {\n  Input,\n  InputGroup,\n  InputRightElement,\n  Button,\n  Stack,\n  Text,\n  Link,\n  Flex,\n  useColorModeValue,\n  Heading,\n  Box,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport { useState } from 'react';\n\nimport { useRegisterUserMutation } from 'redux/contactsSlice';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nimport { NavLink } from 'react-router-dom';\n\nexport default function SignupCard() {\n  const [registerUser] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const res = await registerUser({\n      name: form.elements.username.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    }).unwrap();\n\n    dispatch(setCredentials(res));\n    form.reset();\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'} textAlign={'center'}>\n            Sign up to your account\n          </Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            to enjoy our cool APP ✌️\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <Stack spacing={4} as=\"form\" onSubmit={handleSignUp}>\n            <FormControl id=\"firstName\" isRequired>\n              <FormLabel>Nickname</FormLabel>\n              <Input type=\"text\" name=\"username\" placeholder=\"Sara Repetovna\" />\n            </FormControl>\n\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input type=\"email\" name=\"email\" placeholder=\"email@mail.com\" />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}\"\n                  placeholder=\"7 characters or more, please\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={10} pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"lg\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            <Stack pt={1}>\n              <Text align={'center'}>\n                Already a user?\n                <Link as={NavLink} to=\"/login\" color={'blue.400'}>\n                  Login\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n"],"names":["SignupCard","useRegisterUserMutation","registerUser","dispatch","useDispatch","handleSignUp","e","preventDefault","form","target","name","elements","username","value","email","password","unwrap","res","setCredentials","reset","useState","showPassword","setShowPassword","minH","align","justify","bg","useColorModeValue","spacing","mx","maxW","py","px","fontSize","textAlign","color","rounded","boxShadow","p","as","onSubmit","id","isRequired","type","placeholder","pattern","h","variant","onClick","pt","loadingText","size","_hover","NavLink","to"],"sourceRoot":""}